name: test
on:
  push:
    branches:
      - main
  pull_request:

env:
  # Avoid noisy outputs like "tput: No value for $TERM and no -T specified"
  TERM: dumb
jobs:
  test:
    name: Test with ${{ matrix.go }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [1.21, 1.22]
    steps:
      - uses: actions/checkout@v4
      - name: prepare sh files
        run: |
          if [ -d "./scripts" ]; then
            find ./scripts -name "*.sh" -type f -print0 | xargs -0 chmod +x
            echo "Made the following scripts executable:"
            find ./scripts -name "*.sh" -type f -print
          else
            echo "No 'scripts' directory found."
          fi
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
      - name: Install dyff
        run: go install github.com/homeport/dyff/cmd/dyff@v1.5.8
      - name: Set up environment variables
        run: |
          echo "VAULT_URI=${{ secrets.VAULT_URI }}" >> .env
      - name: Run tests
        run: make test
  docs:
    name: Build docs and Coveralls integration
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: prepare sh files
        run: |
          if [ -d "./scripts" ]; then
            find ./scripts -name "*.sh" -type f -print0 | xargs -0 chmod +x
            echo "Made the following scripts executable:"
            find ./scripts -name "*.sh" -type f -print
          else
            echo "No 'scripts' directory found."
          fi
      - uses: actions/setup-go@v5
        with:
          go-version: ^1.21
      - name: Install dyff
        run: go install github.com/homeport/dyff/cmd/dyff@v1.5.8
      - name: Install goveralls
        run: |
          go install github.com/mattn/goveralls@latest
          go install github.com/modocache/gover@latest
          go install github.com/mitchellh/gox@latest
      - name: Set up environment variables
        run: |
          echo "VAULT_URI=${{ secrets.VAULT_URI }}" >> .env
      - name: Create .coverprofile for each targeted directory by re:running tests
        run: make test
      - name: Collect all .coverprofile files and save it to one file gover.coverprofile
        run: gover
      - name: Send coverage
        run: goveralls -coverprofile=gover.coverprofile -service=github
        env:
          # As per https://github.com/mattn/goveralls#github-actions
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
